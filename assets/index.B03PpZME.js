import{_ as m}from"./ValaxyMain.vue_vue_type_style_index_0_lang.CDNibFOu.js";import{V as E}from"./app.CmA0qfZP.js";import{p as b,N as F,u as g,a3 as t,U as l,O as u,S as s,W as a,C as r,E as B}from"./framework.CKsHIdWx.js";import{e as v,a as A,u as T}from"./chunks/vue-router.CwVjGBxy.js";import"./YunComment.vue_vue_type_style_index_0_lang.W6MzDCJn.js";import"./index.C5okkQwF.js";import"./chunks/dayjs.CCYrSalk.js";import"./chunks/@vueuse/motion.ClL2VSPB.js";import"./chunks/vue-i18n.CsQzXKWS.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang.BVfBHuM-.js";import"./post.BO2M9Fgu.js";import"./chunks/pinia.sS_t_ppk.js";import"./chunks/nprogress.BahbDzmd.js";const c=b({__name:"ValaxyFootnoteTooltip",setup(h){return(n,o)=>(u(),F(g(E),{class:"inline-block",distance:8},{popper:t(()=>[l(n.$slots,"popper")]),default:t(()=>[l(n.$slots,"default")]),_:3}))}}),P="/assets/1-1.BYjlB6ml.png",S=v("/posts/message-queue-kafka",async h=>JSON.parse('{"title":"消息队列与卡夫卡-阅读文档(on going)","description":"","frontmatter":{"draft":false,"title":"消息队列与卡夫卡-阅读文档(on going)","date":"2025-04-24","categories":"Middleware","tags":["MessageQueue","Kafka","Java"]},"headers":[],"relativePath":"pages/posts/message-queue-kafka/index.md","lastUpdated":1750994524000}'),{lazy:(h,n)=>h.name===n.name}),H={__name:"index",setup(h,{expose:n}){var d;const{data:o}=S(),f=T(),y=A(),p=Object.assign(y.meta.frontmatter||{},((d=o.value)==null?void 0:d.frontmatter)||{});return f.currentRoute.value.data=o.value,B("valaxy:frontmatter",p),globalThis.$frontmatter=p,n({frontmatter:{draft:!1,title:"消息队列与卡夫卡-阅读文档(on going)",date:"2025-04-24",categories:"Middleware",tags:["MessageQueue","Kafka","Java"]}}),(e,i)=>{const k=c,C=m;return u(),F(C,{frontmatter:g(p)},{"main-content-md":t(()=>[i[24]||(i[24]=s("h1",{id:"开始",tabindex:"-1"},[a("开始 "),s("a",{class:"header-anchor",href:"#开始","aria-label":'Permalink to "开始"'},"​")],-1)),i[25]||(i[25]=s("h2",{id:"介绍",tabindex:"-1"},[a("介绍 "),s("a",{class:"header-anchor",href:"#介绍","aria-label":'Permalink to "介绍"'},"​")],-1)),i[26]||(i[26]=s("h3",{id:"什么是事件流",tabindex:"-1"},[a("什么是事件流？ "),s("a",{class:"header-anchor",href:"#什么是事件流","aria-label":'Permalink to "什么是事件流？"'},"​")],-1)),i[27]||(i[27]=s("p",null,[a("事件流是数字版的人体中枢神经。是从事件源，例如数据库、传感器、移动设备、云服务、应用程序等采集即时数据的一种实现方式。"),s("br"),a(" 并且可以存储这些事件流以便后续检索、操作、处理并即时向事件流反应并可溯源。可以按需求路由事件流去往不同的目标技术。"),s("br"),a(" 事件流保证了数据持续的流动和解释，从而在正确的时间、正确的地点提供正确的信息。")],-1)),i[28]||(i[28]=s("h3",{id:"事件流可以用来做什么",tabindex:"-1"},[a("事件流可以用来做什么？ "),s("a",{class:"header-anchor",href:"#事件流可以用来做什么","aria-label":'Permalink to "事件流可以用来做什么？"'},"​")],-1)),i[29]||(i[29]=s("p",null,"很多事",-1)),i[30]||(i[30]=s("h3",{id:"kafka-是一个事件流平台-这意味着什么",tabindex:"-1"},[a("kafka 是一个事件流平台，这意味着什么？ "),s("a",{class:"header-anchor",href:"#kafka-是一个事件流平台-这意味着什么","aria-label":'Permalink to "kafka 是一个事件流平台，这意味着什么？"'},"​")],-1)),i[31]||(i[31]=s("p",null,"三点：",-1)),i[32]||(i[32]=s("ul",null,[s("li",null,"发布（写）和订阅（读）事件流，包括来自其他系统的持续的输入/输出数据"),s("li",null,"按照你需求的时间内可靠地存储并持续化事件"),s("li",null,"按照事件发生的顺序或者追溯时对事件流进行处理")],-1)),i[33]||(i[33]=s("h3",{id:"简述-kafka-如何工作",tabindex:"-1"},[a("简述 kafka 如何工作 "),s("a",{class:"header-anchor",href:"#简述-kafka-如何工作","aria-label":'Permalink to "简述 kafka 如何工作"'},"​")],-1)),i[34]||(i[34]=s("p",null,[a("kafka 是一个由复数个"),s("strong",null,"服务端"),a("与"),s("strong",null,"客户端"),a("组成的分布式系统，它们之间通过高性能的 TCP 网络连接通信。可以被部署在裸机、虚拟机和地端或云端的虚拟化容器里。")],-1)),i[35]||(i[35]=s("p",null,[s("strong",null,"服务端"),a("：Kafka 以一个或多个服务器集群的形式运行，可以跨越多个数据中心或云区域。一些服务器构成存储层，称为 "),s("em",null,"brokers"),a("。其他的一些服务器运行 "),s("em",null,"Kafka Connect"),a(" 来持续性地以事件流形式输入输出数据，来和你现存的系统交互，例如关系型数据库或其他 kafka 集群。为了实现关键性任务用例，kafka 集群拥有高拓展性和容错性，如果任意一台服务器下线，其他服务器将接替其工作以确保不丢失任何关键数据的情况下持续运行。"),s("br"),s("strong",null,"客户端"),a("：通过它们，您可以编写分布式应用程序和微服务，并行、大规模地读取、写入和处理事件流，即使在网络故障或机器故障的情况下也能容错。Kafka 自带了一些这样的客户端，同时还有社区提供的数十种客户端：支持 Java 和 Scala（包括更高级的 Kafka Streams 库）、Go、Python、C/C++ 以及许多其他编程语言的客户端，也支持 REST API。")],-1)),i[36]||(i[36]=s("h3",{id:"主要概念和术语",tabindex:"-1"},[a("主要概念和术语 "),s("a",{class:"header-anchor",href:"#主要概念和术语","aria-label":'Permalink to "主要概念和术语"'},"​")],-1)),i[37]||(i[37]=s("p",null,[a("一条"),s("strong",null,"事件"),a("记录了你的业务中“某事正在发生”这一现实。当你向 kafka 读/写数据时，会以事件的格式进行。"),s("br"),a(" An event has a key, value, timestamp, and optional metadata headers.")],-1)),i[38]||(i[38]=s("p",null,"一条事件的范例：",-1)),i[39]||(i[39]=s("ul",null,[s("li",null,'Event key: "Alice"'),s("li",null,'Event value: "Made a payment of $200 to Bob"'),s("li",null,'Event timestamp: "Jun. 25, 2020 at 2:06 p.m."')],-1)),s("p",null,[i[4]||(i[4]=s("em",null,"Producers",-1)),i[5]||(i[5]=a(" 是指那些向 kafka 发布（写）事件的客户端，")),i[6]||(i[6]=s("em",null,"consumers",-1)),i[7]||(i[7]=a(" 是那些订阅（读并处理）这些事件的。kafka 中，它们相互解耦")),r(k,null,{popper:t(()=>i[0]||(i[0]=[s("p",null,"decoupled",-1)])),default:t(()=>[i[1]||(i[1]=s("sup",{class:"footnote-ref"},[s("a",{href:"#fn1",id:"fnref1"},"[1]")],-1))]),_:1,__:[1]}),i[8]||(i[8]=a("并互不相干")),r(k,null,{popper:t(()=>i[2]||(i[2]=[s("p",null,"agnostic of each other",-1)])),default:t(()=>[i[3]||(i[3]=s("sup",{class:"footnote-ref"},[s("a",{href:"#fn2",id:"fnref2"},"[2]")],-1))]),_:1,__:[3]}),i[9]||(i[9]=a("。这是实现 kafka 著名的高拓展性的核心设计，例如 producers 从来不需要等待 consumers。kafka 提供了数个保证措施例如单条信息只被处理一次的能力。"))]),i[40]||(i[40]=s("p",null,[a("事件以 "),s("em",null,"topics"),a(" 的形式被组织和持续化储存。一条 "),s("em",null,"topic"),a(" 就像是一个文件系统中的一个文件夹，事件就是文件夹中的文件。一个典型的 "),s("em",null,"topic"),a(' 名可以是 "payments"。'),s("br"),a(" 一条 "),s("em",null,"topic"),a(" 可以拥有复数个消费者和生产者，一个 "),s("em",null,"topic"),a(" 可以有零个、一个或多个生产者向其写入事件，也可以有零个、一个或多个消费者订阅这些事件。"),s("br"),s("em",null,"Topic"),a(" 中的事件可以按照需求随时阅读，不像传统的消息系统，消息不会“阅后即焚”。而是根据你的需求配置每个 "),s("em",null,"topic"),a(" 来决定每条消息应该存多久。Kafka 的性能基本不受数据大小的影响，因此长时间存储数据完全没有问题。")],-1)),i[41]||(i[41]=s("p",null,[s("em",null,"Topic"),a(" 是被分区的，这意味着一个主题会被分散存储在多个“桶”中，这些桶位于不同的 Kafka broker 上。这种分布式的数据存放方式对可扩展性至关重要，因为它允许客户端应用同时从多个 broker 中读取或写入数据。当一个新事件被发布到某个主题时，实际上是被追加到该主题的某个分区中。具有相同事件键（例如某个客户 ID 或车辆 ID）的事件会写入同一个分区，Kafka 保证任何一个主题分区的消费者总是会按照事件写入的顺序，准确无误地读取这些事件。")],-1)),i[42]||(i[42]=s("figure",null,[s("img",{src:P,alt:"主题的分区",loading:"lazy",decoding:"async"})],-1)),i[43]||(i[43]=s("p",null,"为了使数据具备容错性和高可用性，每个主题都可以跨地理区域或数据中心进行复制。无论是系统故障、broker 维护，还是其他问题发生时，总会有多个 broker 拥有数据的副本。生产环境中常见的设置是副本因子为 3，也就是说每条数据始终有三份副本。这种复制是在主题分区（topic-partition）级别进行的。",-1)),i[44]||(i[44]=s("h3",{id:"kafka-apis",tabindex:"-1"},[a("Kafka APIs "),s("a",{class:"header-anchor",href:"#kafka-apis","aria-label":'Permalink to "Kafka APIs"'},"​")],-1)),i[45]||(i[45]=s("p",null,"Kafka 为 Java 和 Scala 提供了五个核心 API：",-1)),i[46]||(i[46]=s("ul",null,[s("li",null,"Admin API：管理和审查主题、brokers和其他的kafka对象"),s("li",null,"Producer API：向一个或多个主题中发布（写）事件流"),s("li",null,"Consumer API：订阅（读）并处理一个或多个主题中的事件流"),s("li",null,"Kafka Streams API：用于实现流处理应用和微服务。它提供了更高层次的功能来处理事件流，包括转换、带状态的操作（如聚合和连接）、窗口操作、基于事件时间的处理等。输入数据从一个或多个主题中读取，生成的输出则写入一个或多个主题，从而实现对输入流到输出流的有效转换"),s("li",null,"Kafka Connect API：构建连接器")],-1)),i[47]||(i[47]=s("h2",{id:"用例",tabindex:"-1"},[a("用例 "),s("a",{class:"header-anchor",href:"#用例","aria-label":'Permalink to "用例"'},"​")],-1)),i[48]||(i[48]=s("h3",{id:"消息队列",tabindex:"-1"},[a("消息队列 "),s("a",{class:"header-anchor",href:"#消息队列","aria-label":'Permalink to "消息队列"'},"​")],-1)),i[49]||(i[49]=s("h3",{id:"网站活动跟踪",tabindex:"-1"},[a("网站活动跟踪 "),s("a",{class:"header-anchor",href:"#网站活动跟踪","aria-label":'Permalink to "网站活动跟踪"'},"​")],-1)),i[50]||(i[50]=s("h3",{id:"指标监控",tabindex:"-1"},[a("指标监控 "),s("a",{class:"header-anchor",href:"#指标监控","aria-label":'Permalink to "指标监控"'},"​")],-1)),i[51]||(i[51]=s("h3",{id:"日志聚合",tabindex:"-1"},[a("日志聚合 "),s("a",{class:"header-anchor",href:"#日志聚合","aria-label":'Permalink to "日志聚合"'},"​")],-1)),i[52]||(i[52]=s("p",null,"很多人使用 Kafka 来替代传统的日志聚合方案。传统的日志聚合通常是将服务器上的物理日志文件收集起来，集中存储到某个位置（如文件服务器或 HDFS）以便处理。而 Kafka 则抽象掉了文件的细节，以更简洁的方式将日志或事件数据表示为消息流。这不仅实现了更低延迟的处理方式，还更方便支持多个数据源和分布式的数据消费。与 Scribe 或 Flume 等以日志为中心的系统相比，Kafka 拥有同样优秀的性能、更强的持久性保障（得益于副本机制），以及更低的端到端延迟。",-1)),i[53]||(i[53]=s("h3",{id:"流式处理",tabindex:"-1"},[a("流式处理 "),s("a",{class:"header-anchor",href:"#流式处理","aria-label":'Permalink to "流式处理"'},"​")],-1)),i[54]||(i[54]=s("h3",{id:"事件溯源",tabindex:"-1"},[a("事件溯源 "),s("a",{class:"header-anchor",href:"#事件溯源","aria-label":'Permalink to "事件溯源"'},"​")],-1)),i[55]||(i[55]=s("p",null,"事件溯源是一种应用程序设计风格，它将状态的每一次变化都记录为按时间顺序排列的一系列事件。Kafka 支持存储超大规模的日志数据，非常适合作为这种风格应用的后端。",-1)),i[56]||(i[56]=s("h3",{id:"日志提交",tabindex:"-1"},[a("日志提交 "),s("a",{class:"header-anchor",href:"#日志提交","aria-label":'Permalink to "日志提交"'},"​")],-1)),s("p",null,[i[12]||(i[12]=a("Kafka 可以作为分布式系统的一种外部提交日志。日志用于在节点之间复制数据，并作为故障节点重新同步数据的一种机制。Kafka 的日志压缩")),r(k,null,{popper:t(()=>i[10]||(i[10]=[s("p",null,"log compaction",-1)])),default:t(()=>[i[11]||(i[11]=s("sup",{class:"footnote-ref"},[s("a",{href:"#fn3",id:"fnref3"},"[3]")],-1))]),_:1,__:[11]}),i[13]||(i[13]=a("功能很好地支持了这种用法。在这种场景下，Kafka 的作用类似于 Apache BookKeeper 项目。"))]),i[57]||(i[57]=s("h2",{id:"快速开始",tabindex:"-1"},[a("快速开始 "),s("a",{class:"header-anchor",href:"#快速开始","aria-label":'Permalink to "快速开始"'},"​")],-1)),i[58]||(i[58]=s("h3",{id:"step-1-get-kafka",tabindex:"-1"},[a("STEP 1: GET KAFKA "),s("a",{class:"header-anchor",href:"#step-1-get-kafka","aria-label":'Permalink to "STEP 1: GET KAFKA"'},"​")],-1)),i[59]||(i[59]=s("h3",{id:"step-2-start-the-kafka-environment",tabindex:"-1"},[a("STEP 2: START THE KAFKA ENVIRONMENT "),s("a",{class:"header-anchor",href:"#step-2-start-the-kafka-environment","aria-label":'Permalink to "STEP 2: START THE KAFKA ENVIRONMENT"'},"​")],-1)),i[60]||(i[60]=s("p",null,[s("strong",null,"使用下载文件")],-1)),i[61]||(i[61]=s("p",null,[s("strong",null,"使用 docker 镜像"),a("："),s("br"),a(" 获取 docker 镜像")],-1)),i[62]||(i[62]=s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," docker"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," pull"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," apache/kafka:4.0.0")])])]),s("button",{class:"collapse"})],-1)),i[63]||(i[63]=s("p",null,"启动 kafka 容器",-1)),i[64]||(i[64]=s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," docker"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," run"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -p"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 9092:9092"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," apache/kafka:4.0.0")])])]),s("button",{class:"collapse"})],-1)),s("p",null,[i[16]||(i[16]=a("或者使用基于 GraalVM Native")),r(k,null,{popper:t(()=>i[14]||(i[14]=[s("p",null,"GraalVM 提供了一种功能叫做 Native Image，它可以把 Java（或其他 JVM 语言）代码 AOT（Ahead-Of-Time）编译 成一个 不依赖 JVM 的本地可执行文件（native executable），类似于 C/C++ 编译后的程序。",-1)])),default:t(()=>[i[15]||(i[15]=s("sup",{class:"footnote-ref"},[s("a",{href:"#fn4",id:"fnref4"},"[4]")],-1))]),_:1,__:[15]}),i[17]||(i[17]=a(" 的"))]),i[65]||(i[65]=s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," docker"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," pull"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," apache/kafka-native:4.0.0")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," docker"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," run"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -p"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 9092:9092"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," apache/kafka-native:4.0.0")])])]),s("button",{class:"collapse"})],-1)),i[66]||(i[66]=s("h3",{id:"step-3-create-a-topic-to-store-your-events",tabindex:"-1"},[a("STEP 3: CREATE A TOPIC TO STORE YOUR EVENTS "),s("a",{class:"header-anchor",href:"#step-3-create-a-topic-to-store-your-events","aria-label":'Permalink to "STEP 3: CREATE A TOPIC TO STORE YOUR EVENTS"'},"​")],-1)),i[67]||(i[67]=s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," bin/kafka-topics.sh"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --create"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --topic"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," quickstart-events"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --bootstrap-server"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," localhost:9092")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"#	--create			Create a new topic")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"#	--topic				<String: topic>	")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"#	--bootstrap-server 	<String: server to connect to>")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," bin/kafka-topics.sh"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --describe"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --topic"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," quickstart-events"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --bootstrap-server"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," localhost:9092")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Topic:"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," quickstart-events"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"	TopicId:"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 00a45VDfTyyFNadsmeZCQg"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"	PartitionCount:"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 1"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"	ReplicationFactor:"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 1"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"	Configs:"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," segment.bytes="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1073741824")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"	Topic:"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," quickstart-events"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"	Partition:"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 0"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"	Leader:"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 1"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"	Replicas:"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 1"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"	Isr:"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 1"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"	Elr:"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 	LastKnownElr:")])])]),s("button",{class:"collapse"})],-1)),i[68]||(i[68]=s("h3",{id:"setp-4-write-some-events-into-the-topic",tabindex:"-1"},[a("SETP 4: WRITE SOME EVENTS INTO THE TOPIC "),s("a",{class:"header-anchor",href:"#setp-4-write-some-events-into-the-topic","aria-label":'Permalink to "SETP 4: WRITE SOME EVENTS INTO THE TOPIC"'},"​")],-1)),i[69]||(i[69]=s("p",null,"Kafka 客户端通过网络向 kafka brokers 交流来读写事件。一旦接受，brokers 将按照你需求的时长持续化并容错地方式存储事件，甚至是永久。",-1)),i[70]||(i[70]=s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ./kafka-console-producer.sh"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --topic"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," quickstart-events"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --bootstrap-server"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," localhost:9092")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"This is my first event")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"This is my second event")])])]),s("button",{class:"collapse"})],-1)),i[71]||(i[71]=s("h3",{id:"step-5-read-the-evnets",tabindex:"-1"},[a("STEP 5: READ THE EVNETS "),s("a",{class:"header-anchor",href:"#step-5-read-the-evnets","aria-label":'Permalink to "STEP 5: READ THE EVNETS"'},"​")],-1)),i[72]||(i[72]=s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"04007a697835:/opt/kafka/bin$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ./kafka-console-consumer.sh"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --topic"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," quickstart-events"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --from-beginning"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --bootstrap-server"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," localhost:9092")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"This"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," is"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," my"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," first"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," event")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"This"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," is"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," my"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," second"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," event")])])]),s("button",{class:"collapse"})],-1)),i[73]||(i[73]=s("p",null,[s("code",null,"Ctrl-C"),a(" 来停止 consumer 客户端")],-1)),i[74]||(i[74]=s("h3",{id:"step-6-import-export-your-data-as-streams-of-events-with-kafka-connect",tabindex:"-1"},[a("STEP 6: IMPORT/EXPORT YOUR DATA AS STREAMS OF EVENTS WITH KAFKA CONNECT "),s("a",{class:"header-anchor",href:"#step-6-import-export-your-data-as-streams-of-events-with-kafka-connect","aria-label":'Permalink to "STEP 6: IMPORT/EXPORT YOUR DATA AS STREAMS OF EVENTS WITH KAFKA CONNECT"'},"​")],-1)),s("p",null,[i[20]||(i[20]=a("Kafka Connet 允许你持续性地从外部系统中提取数据，反之亦然")),r(k,null,{popper:t(()=>i[18]||(i[18]=[s("p",null,"vice versa",-1)])),default:t(()=>[i[19]||(i[19]=s("sup",{class:"footnote-ref"},[s("a",{href:"#fn5",id:"fnref5"},"[5]")],-1))]),_:1,__:[19]}),i[21]||(i[21]=a("。")),i[22]||(i[22]=s("br",null,null,-1)),i[23]||(i[23]=a(" 它是一个可扩展的工具，用于运行连接器，这些连接器实现了与外部系统交互的自定义逻辑。因此，将现有系统与 Kafka 集成变得非常简单。为了进一步简化这个过程，Kafka 社区还提供了数百个现成可用的连接器。"))]),i[75]||(i[75]=s("p",null,"在这一节我们使用简单连接器来从文件中向 Kafka topic 导入数据，并将数据从 Kafka topic 中导回文件。",-1)),i[76]||(i[76]=s("p",null,[a("基于快速上手的目标，这里的配置文件将使用相对路径并且认为连接器的包是一个 "),s("a",{href:"https://stackoverflow.com/questions/11947037/what-is-an-uber-jar-file",target:"_blank",rel:"noreferrer"},"uber jar"),a("。然而，并不应该在生产环境中使用相对路径，使用绝对路径总是更好的。")],-1)),i[77]||(i[77]=s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," echo"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "plugin.path=libs/connect-file-4.0.0.jar"'),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," >>"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config/connect-standalone.properties")])])]),s("button",{class:"collapse"})],-1)),i[78]||(i[78]=s("p",null,"然后，准备一些测试文件",-1)),i[79]||(i[79]=s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," echo"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -e"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "foo\\nbar"'),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," >"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," test.txt")])])]),s("button",{class:"collapse"})],-1)),i[80]||(i[80]=s("p",null,[a("继续，我们将以 "),s("em",null,"standalone"),a(" 模式启用两个连接器，这意味着它们将在运行在一个本地的专用进程中。")],-1)),i[81]||(i[81]=s("p",null,"我们提供三个配置文件作为参数",-1)),i[82]||(i[82]=s("ul",null,[s("li",null,"第一个永远是 Kafka Connect 的配置文件，包含了一些通用配置例如需要连接的 Kafka brokers 和数据的序列化格式。"),s("li",null,"剩下的两个配置文件每个都特定了一个需要创建的连接器，这些文件中包含了一个独特的连接器名，需要实例化的连接器类，以及一些其他被连接器需要的配置。")],-1)),i[83]||(i[83]=s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," bin/connect-standalone.sh"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config/connect-standalone.properties"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config/connect-file-source.properties"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config/connect-file-sink.properties")])])]),s("button",{class:"collapse"})],-1)),i[84]||(i[84]=s("details",{class:"details custom-block"},[s("summary",null,"connect-file-source.properties"),s("div",{class:"language-properties vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"properties"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# Licensed to the Apache Software Foundation (ASF) under one or more")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# contributor license agreements.  See the NOTICE file distributed with")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# this work for additional information regarding copyright ownership.")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# The ASF licenses this file to You under the Apache License, Version 2.0")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},'# (the "License"); you may not use this file except in compliance with')]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# the License.  You may obtain a copy of the License at")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"#")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"#    http://www.apache.org/licenses/LICENSE-2.0")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"#")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# Unless required by applicable law or agreed to in writing, software")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},'# distributed under the License is distributed on an "AS IS" BASIS,')]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# See the License for the specific language governing permissions and")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# limitations under the License.")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"=local-file-source")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"connector.class"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"=FileStreamSource")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"tasks.max"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"=1")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"file"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"=test.txt")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"topic"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"=connect-test")])])]),s("button",{class:"collapse"})])],-1)),i[85]||(i[85]=s("details",{class:"details custom-block"},[s("summary",null,"console-consumer"),s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"04007a697835:/opt/kafka$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," bin/kafka-console-consumer.sh"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --topic"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," connect-test"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --from-beginning"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --bootstrap-server"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," localhost:9092")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},'"schema"'),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},":"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"{"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},'"'),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"type"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},'":"'),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"string"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},'","'),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"optional"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},'":false},"'),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"payload"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},'":"'),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"foo"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},'"}')]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},'{"'),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"schema"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},'":{"'),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"type"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},'":"'),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"string"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},'","'),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"optional"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},'":false},"'),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"payload"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},'":"'),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"bar"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},'"}')])])]),s("button",{class:"collapse"})])],-1)),i[86]||(i[86]=s("p",null,"这些卡夫卡自带的范例配置文件，默认使用本地集群配置。先前启动的两个连接器，一个是源连接器它从输入文件中逐行读取并逐个发布至 Kafka topic；第二个是下沉连接器从 Kafka topic 中读取信息并将它们逐行写入文件。",-1)),i[87]||(i[87]=s("div",{class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"04007a697835:/opt/kafka$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," cat"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," test.sink.txt"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"foo")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"bar")])])]),s("button",{class:"collapse"})],-1)),i[88]||(i[88]=s("hr",{class:"footnotes-sep"},null,-1)),i[89]||(i[89]=s("section",{class:"footnotes"},[s("ol",{class:"footnotes-list"},[s("li",{id:"fn1",class:"footnote-item"},[s("p",null,[a("decoupled "),s("a",{href:"#fnref1",class:"footnote-backref"},"↩︎")])]),s("li",{id:"fn2",class:"footnote-item"},[s("p",null,[a("agnostic of each other "),s("a",{href:"#fnref2",class:"footnote-backref"},"↩︎")])]),s("li",{id:"fn3",class:"footnote-item"},[s("p",null,[a("log compaction "),s("a",{href:"#fnref3",class:"footnote-backref"},"↩︎")])]),s("li",{id:"fn4",class:"footnote-item"},[s("p",null,[a("GraalVM 提供了一种功能叫做 Native Image，它可以把 Java（或其他 JVM 语言）代码 AOT（Ahead-Of-Time）编译 成一个 不依赖 JVM 的本地可执行文件（native executable），类似于 C/C++ 编译后的程序。 "),s("a",{href:"#fnref4",class:"footnote-backref"},"↩︎")])]),s("li",{id:"fn5",class:"footnote-item"},[s("p",null,[a("vice versa "),s("a",{href:"#fnref5",class:"footnote-backref"},"↩︎")])])])],-1))]),"main-header":t(()=>[l(e.$slots,"main-header")]),"main-header-after":t(()=>[l(e.$slots,"main-header-after")]),"main-nav":t(()=>[l(e.$slots,"main-nav")]),"main-content-before":t(()=>[l(e.$slots,"main-content-before")]),"main-content":t(()=>[l(e.$slots,"main-content")]),"main-content-after":t(()=>[l(e.$slots,"main-content-after")]),"main-nav-before":t(()=>[l(e.$slots,"main-nav-before")]),"main-nav-after":t(()=>[l(e.$slots,"main-nav-after")]),comment:t(()=>[l(e.$slots,"comment")]),footer:t(()=>[l(e.$slots,"footer")]),aside:t(()=>[l(e.$slots,"aside")]),"aside-custom":t(()=>[l(e.$slots,"aside-custom")]),default:t(()=>[l(e.$slots,"default")]),_:3},8,["frontmatter"])}}};export{H as default,S as usePageData};
